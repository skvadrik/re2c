/* Generated by re2c */
#include "re2c/base.h"

namespace re2c_submatch_12__alt1_8 {





#define YYMAXFILL 2


struct input_t {
    FILE* file;
    char *buf;
    char *lim;
    char *cur;
    char *mar;
    char *tok;
    char *yyt1;
char *yyt10;
char *yyt11;
char *yyt12;
char *yyt13;
char *yyt14;
char *yyt15;
char *yyt16;
char *yyt2;
char *yyt3;
char *yyt4;
char *yyt5;
char *yyt6;
char *yyt7;
char *yyt8;
char *yyt9;

    
    taglistpool_t tlp;
    int eof;
};

static inline void free_input(input_t *in) {
    free(in->buf);
    taglistpool_free(&in->tlp);
    if (in->file) fclose(in->file);
}

static inline int fill_buffered_eof(input_t *in) {
    size_t free;
    if (in->eof) return 1;

    free = in->tok - in->buf;
    assert(free > 0);

    memmove(in->buf, in->tok, in->lim - in->tok);
    in->lim -= free;
    in->cur -= free;
    in->mar -= free;
    in->tok -= free;
    if (in->yyt1) in->yyt1 -= free;
if (in->yyt10) in->yyt10 -= free;
if (in->yyt11) in->yyt11 -= free;
if (in->yyt12) in->yyt12 -= free;
if (in->yyt13) in->yyt13 -= free;
if (in->yyt14) in->yyt14 -= free;
if (in->yyt15) in->yyt15 -= free;
if (in->yyt16) in->yyt16 -= free;
if (in->yyt2) in->yyt2 -= free;
if (in->yyt3) in->yyt3 -= free;
if (in->yyt4) in->yyt4 -= free;
if (in->yyt5) in->yyt5 -= free;
if (in->yyt6) in->yyt6 -= free;
if (in->yyt7) in->yyt7 -= free;
if (in->yyt8) in->yyt8 -= free;
if (in->yyt9) in->yyt9 -= free;


    in->lim += fread(in->lim, 1, free, in->file);
    in->lim[0] = 0;

    if (in->lim < in->buf + SIZE) {
        in->eof = 1;
    }

    return 0;
}

static inline int fill_buffered_scc(input_t *in, size_t need) {
    size_t free;
    if (in->eof) return 1;

    free = in->tok - in->buf;
    assert(free >= need);

    memmove(in->buf, in->tok, in->lim - in->tok);
    in->lim -= free;
    in->cur -= free;
    in->mar -= free;
    in->tok -= free;
    if (in->yyt1) in->yyt1 -= free;
if (in->yyt10) in->yyt10 -= free;
if (in->yyt11) in->yyt11 -= free;
if (in->yyt12) in->yyt12 -= free;
if (in->yyt13) in->yyt13 -= free;
if (in->yyt14) in->yyt14 -= free;
if (in->yyt15) in->yyt15 -= free;
if (in->yyt16) in->yyt16 -= free;
if (in->yyt2) in->yyt2 -= free;
if (in->yyt3) in->yyt3 -= free;
if (in->yyt4) in->yyt4 -= free;
if (in->yyt5) in->yyt5 -= free;
if (in->yyt6) in->yyt6 -= free;
if (in->yyt7) in->yyt7 -= free;
if (in->yyt8) in->yyt8 -= free;
if (in->yyt9) in->yyt9 -= free;


    in->lim += fread(in->lim, 1, free, in->file);

    if (in->lim < in->buf + SIZE) {
        in->eof = 1;
        memset(in->lim, 0, YYMAXFILL);
        in->lim += YYMAXFILL;
    }

    return 0;
}

static inline void init_input_simple(input_t *in, const char* fname) {
    FILE* f = fopen(fname, "rb");

    fseek(f, 0, SEEK_END);
    size_t flen = (size_t) ftell(f);
    fseek(f, 0, SEEK_SET);

    in->file = nullptr; // unused
    in->buf = (char*) malloc(flen + 1);
    in->lim = nullptr; // unused
    in->cur = in->mar = in->tok = in->buf;
    in->yyt1 = 0;
in->yyt10 = 0;
in->yyt11 = 0;
in->yyt12 = 0;
in->yyt13 = 0;
in->yyt14 = 0;
in->yyt15 = 0;
in->yyt16 = 0;
in->yyt2 = 0;
in->yyt3 = 0;
in->yyt4 = 0;
in->yyt5 = 0;
in->yyt6 = 0;
in->yyt7 = 0;
in->yyt8 = 0;
in->yyt9 = 0;

    
    taglistpool_init(&in->tlp);
    in->eof = 0; // unused

    fread(in->buf, 1, flen, f);
    in->buf[flen] = 0;

    fclose(f);
}

static inline void init_input_buffered_eof(input_t *in, const char* fname) {
    in->file = fopen(fname, "rb");
    in->buf = (char*) malloc(SIZE + 1);
    in->lim = in->buf + SIZE;
    in->cur = in->lim;
    in->mar = in->lim;
    in->tok = in->lim;
    in->yyt1 = 0;
in->yyt10 = 0;
in->yyt11 = 0;
in->yyt12 = 0;
in->yyt13 = 0;
in->yyt14 = 0;
in->yyt15 = 0;
in->yyt16 = 0;
in->yyt2 = 0;
in->yyt3 = 0;
in->yyt4 = 0;
in->yyt5 = 0;
in->yyt6 = 0;
in->yyt7 = 0;
in->yyt8 = 0;
in->yyt9 = 0;

    
    taglistpool_init(&in->tlp);
    in->eof = 0;
    fill_buffered_eof(in);
}

static inline void init_input_buffered_scc(input_t *in, const char* fname) {
    in->file = fopen(fname, "rb");
    in->buf = (char*) malloc(SIZE + YYMAXFILL);
    in->lim = in->buf + SIZE;
    in->cur = in->lim;
    in->mar = in->lim;
    in->tok = in->lim;
    in->yyt1 = 0;
in->yyt10 = 0;
in->yyt11 = 0;
in->yyt12 = 0;
in->yyt13 = 0;
in->yyt14 = 0;
in->yyt15 = 0;
in->yyt16 = 0;
in->yyt2 = 0;
in->yyt3 = 0;
in->yyt4 = 0;
in->yyt5 = 0;
in->yyt6 = 0;
in->yyt7 = 0;
in->yyt8 = 0;
in->yyt9 = 0;

    
    taglistpool_init(&in->tlp);
    in->eof = 0;
}

#define YYCURSOR cur
#define YYMARKER mar
#define YYTOKEN tok
#define TLP_CLEAR() do { \
    in->tlp.next = in->tlp.head; \
     \
} while (0)

int lex_simple(input_t *in) {
    char *cur = in->buf, *mar, *tok;
    (void) mar; // maybe unused
    (void) tok; // maybe unused
    char *yyt1;
char *yyt10;
char *yyt11;
char *yyt12;
char *yyt13;
char *yyt14;
char *yyt15;
char *yyt16;
char *yyt2;
char *yyt3;
char *yyt4;
char *yyt5;
char *yyt6;
char *yyt7;
char *yyt8;
char *yyt9;

    
    const char* a1;const char* a2;const char* b1;const char* b2;const char* c1;const char* c2;const char* d1;const char* d2;const char* e1;const char* e2;const char* f1;const char* f2;const char* g1;const char* g2;const char* h1;const char* h2;
    
    long count = 0;
loop:
    tok = cur;
    
{
	char yych;
	yych = *YYCURSOR;
	switch (yych) {
		case 0x00: goto yy1;
		case '\n':
			yyt1 = YYCURSOR;
			yyt2 = YYCURSOR;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'a':
			yyt1 = YYCURSOR;
			goto yy5;
		case 'b':
			yyt10 = YYCURSOR;
			goto yy6;
		case 'c':
			yyt11 = YYCURSOR;
			goto yy7;
		case 'd':
			yyt12 = YYCURSOR;
			goto yy8;
		case 'e':
			yyt13 = YYCURSOR;
			goto yy9;
		case 'f':
			yyt14 = YYCURSOR;
			goto yy10;
		case 'g':
			yyt15 = YYCURSOR;
			goto yy11;
		case 'h':
			yyt16 = YYCURSOR;
			goto yy12;
		default: goto yy2;
	}
yy1:
	++YYCURSOR;
	{ return count; }
yy2:
	++YYCURSOR;
yy3:
	{ return -1; }
yy4:
	++YYCURSOR;
	a1 = yyt1;
	a2 = yyt2;
	b1 = yyt10;
	b2 = yyt3;
	c1 = yyt11;
	c2 = yyt4;
	d1 = yyt12;
	d2 = yyt5;
	e1 = yyt13;
	e2 = yyt6;
	f1 = yyt14;
	f2 = yyt7;
	g1 = yyt15;
	g2 = yyt8;
	h1 = yyt16;
	h2 = yyt9;
	{
        if (a1)      { OUTC('A'); OUTS(a1, a2); }
        else if (b1) { OUTC('B'); OUTS(b1, b2); }
        else if (c1) { OUTC('C'); OUTS(c1, c2); }
        else if (d1) { OUTC('D'); OUTS(d1, d2); }
        else if (e1) { OUTC('E'); OUTS(e1, e2); }
        else if (f1) { OUTC('F'); OUTS(f1, f2); }
        else if (g1) { OUTC('G'); OUTS(g1, g2); }
        else if (h1) { OUTC('H'); OUTS(h1, h2); }
        OUTC('\n');
        goto loop;
    }
yy5:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			yyt2 = YYCURSOR;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'a': goto yy13;
		default: goto yy3;
	}
yy6:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = YYCURSOR;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'b': goto yy15;
		default: goto yy3;
	}
yy7:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = NULL;
			yyt4 = YYCURSOR;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'c': goto yy16;
		default: goto yy3;
	}
yy8:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = YYCURSOR;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'd': goto yy17;
		default: goto yy3;
	}
yy9:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = YYCURSOR;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'e': goto yy18;
		default: goto yy3;
	}
yy10:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = YYCURSOR;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'f': goto yy19;
		default: goto yy3;
	}
yy11:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = YYCURSOR;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'g': goto yy20;
		default: goto yy3;
	}
yy12:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = YYCURSOR;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			goto yy4;
		case 'h': goto yy21;
		default: goto yy3;
	}
yy13:
	yych = *++YYCURSOR;
	switch (yych) {
		case '\n':
			yyt2 = YYCURSOR;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'a': goto yy13;
		default: goto yy14;
	}
yy14:
	YYCURSOR = YYMARKER;
	goto yy3;
yy15:
	yych = *++YYCURSOR;
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = YYCURSOR;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'b': goto yy15;
		default: goto yy14;
	}
yy16:
	yych = *++YYCURSOR;
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = NULL;
			yyt4 = YYCURSOR;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'c': goto yy16;
		default: goto yy14;
	}
yy17:
	yych = *++YYCURSOR;
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = YYCURSOR;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'd': goto yy17;
		default: goto yy14;
	}
yy18:
	yych = *++YYCURSOR;
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = YYCURSOR;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'e': goto yy18;
		default: goto yy14;
	}
yy19:
	yych = *++YYCURSOR;
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = YYCURSOR;
			yyt8 = NULL;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt15 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'f': goto yy19;
		default: goto yy14;
	}
yy20:
	yych = *++YYCURSOR;
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = YYCURSOR;
			yyt9 = NULL;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt16 = NULL;
			goto yy4;
		case 'g': goto yy20;
		default: goto yy14;
	}
yy21:
	yych = *++YYCURSOR;
	switch (yych) {
		case '\n':
			yyt1 = NULL;
			yyt2 = NULL;
			yyt3 = NULL;
			yyt4 = NULL;
			yyt5 = NULL;
			yyt6 = NULL;
			yyt7 = NULL;
			yyt8 = NULL;
			yyt9 = YYCURSOR;
			yyt10 = NULL;
			yyt11 = NULL;
			yyt12 = NULL;
			yyt13 = NULL;
			yyt14 = NULL;
			yyt15 = NULL;
			goto yy4;
		case 'h': goto yy21;
		default: goto yy14;
	}
}

}

#undef YYCURSOR
#undef YYMARKER
#undef YYTOKEN
#undef TLP_CLEAR

#define YYCURSOR in->cur
#define YYMARKER in->mar
#define YYLIMIT in->lim
#define YYTOKEN in->tok
#define TLP_CLEAR() do { \
    in->tlp.next = in->tlp.head; \
     \
} while (0)

int lex_buffered_eof(input_t *in) {
    const char* a1;const char* a2;const char* b1;const char* b2;const char* c1;const char* c2;const char* d1;const char* d2;const char* e1;const char* e2;const char* f1;const char* f2;const char* g1;const char* g2;const char* h1;const char* h2;
    
    long count = 0;
loop:
    in->tok = in->cur;
    
{
	char yych;
yyFillLabel0:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = YYCURSOR;
			in->yyt2 = YYCURSOR;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'a':
			in->yyt1 = YYCURSOR;
			goto yy26;
		case 'b':
			in->yyt10 = YYCURSOR;
			goto yy27;
		case 'c':
			in->yyt11 = YYCURSOR;
			goto yy28;
		case 'd':
			in->yyt12 = YYCURSOR;
			goto yy29;
		case 'e':
			in->yyt13 = YYCURSOR;
			goto yy30;
		case 'f':
			in->yyt14 = YYCURSOR;
			goto yy31;
		case 'g':
			in->yyt15 = YYCURSOR;
			goto yy32;
		case 'h':
			in->yyt16 = YYCURSOR;
			goto yy33;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel0;
				goto yy43;
			}
			goto yy23;
	}
yy23:
	++YYCURSOR;
yy24:
	{ return -1; }
yy25:
	++YYCURSOR;
	a1 = in->yyt1;
	a2 = in->yyt2;
	b1 = in->yyt10;
	b2 = in->yyt3;
	c1 = in->yyt11;
	c2 = in->yyt4;
	d1 = in->yyt12;
	d2 = in->yyt5;
	e1 = in->yyt13;
	e2 = in->yyt6;
	f1 = in->yyt14;
	f2 = in->yyt7;
	g1 = in->yyt15;
	g2 = in->yyt8;
	h1 = in->yyt16;
	h2 = in->yyt9;
	{
        if (a1)      { OUTC('A'); OUTS(a1, a2); }
        else if (b1) { OUTC('B'); OUTS(b1, b2); }
        else if (c1) { OUTC('C'); OUTS(c1, c2); }
        else if (d1) { OUTC('D'); OUTS(d1, d2); }
        else if (e1) { OUTC('E'); OUTS(e1, e2); }
        else if (f1) { OUTC('F'); OUTS(f1, f2); }
        else if (g1) { OUTC('G'); OUTS(g1, g2); }
        else if (h1) { OUTC('H'); OUTS(h1, h2); }
        OUTC('\n');
        goto loop;
    }
yy26:
	YYMARKER = ++YYCURSOR;
yyFillLabel1:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt2 = YYCURSOR;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'a': goto yy34;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel1;
			}
			goto yy24;
	}
yy27:
	YYMARKER = ++YYCURSOR;
yyFillLabel2:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = YYCURSOR;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'b': goto yy36;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel2;
			}
			goto yy24;
	}
yy28:
	YYMARKER = ++YYCURSOR;
yyFillLabel3:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = YYCURSOR;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'c': goto yy37;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel3;
			}
			goto yy24;
	}
yy29:
	YYMARKER = ++YYCURSOR;
yyFillLabel4:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = YYCURSOR;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'd': goto yy38;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel4;
			}
			goto yy24;
	}
yy30:
	YYMARKER = ++YYCURSOR;
yyFillLabel5:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = YYCURSOR;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'e': goto yy39;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel5;
			}
			goto yy24;
	}
yy31:
	YYMARKER = ++YYCURSOR;
yyFillLabel6:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = YYCURSOR;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'f': goto yy40;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel6;
			}
			goto yy24;
	}
yy32:
	YYMARKER = ++YYCURSOR;
yyFillLabel7:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = YYCURSOR;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'g': goto yy41;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel7;
			}
			goto yy24;
	}
yy33:
	YYMARKER = ++YYCURSOR;
yyFillLabel8:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = YYCURSOR;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			goto yy25;
		case 'h': goto yy42;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel8;
			}
			goto yy24;
	}
yy34:
	++YYCURSOR;
yyFillLabel9:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt2 = YYCURSOR;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'a': goto yy34;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel9;
			}
			goto yy35;
	}
yy35:
	YYCURSOR = YYMARKER;
	goto yy24;
yy36:
	++YYCURSOR;
yyFillLabel10:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = YYCURSOR;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'b': goto yy36;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel10;
			}
			goto yy35;
	}
yy37:
	++YYCURSOR;
yyFillLabel11:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = YYCURSOR;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'c': goto yy37;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel11;
			}
			goto yy35;
	}
yy38:
	++YYCURSOR;
yyFillLabel12:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = YYCURSOR;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'd': goto yy38;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel12;
			}
			goto yy35;
	}
yy39:
	++YYCURSOR;
yyFillLabel13:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = YYCURSOR;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'e': goto yy39;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel13;
			}
			goto yy35;
	}
yy40:
	++YYCURSOR;
yyFillLabel14:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = YYCURSOR;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'f': goto yy40;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel14;
			}
			goto yy35;
	}
yy41:
	++YYCURSOR;
yyFillLabel15:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = YYCURSOR;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt16 = NULL;
			goto yy25;
		case 'g': goto yy41;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel15;
			}
			goto yy35;
	}
yy42:
	++YYCURSOR;
yyFillLabel16:
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = YYCURSOR;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			goto yy25;
		case 'h': goto yy42;
		default:
			if (YYLIMIT <= YYCURSOR) {
				if (fill_buffered_eof(in) == 0) goto yyFillLabel16;
			}
			goto yy35;
	}
yy43:
	{ return count; }
}

}

int lex_buffered_scc(input_t *in) {
    const char* a1;const char* a2;const char* b1;const char* b2;const char* c1;const char* c2;const char* d1;const char* d2;const char* e1;const char* e2;const char* f1;const char* f2;const char* g1;const char* g2;const char* h1;const char* h2;
    
    long count = 0;
loop:
    in->tok = in->cur;
    
{
	char yych;
	if ((YYLIMIT - YYCURSOR) < 2) if (fill_buffered_scc(in, 2) != 0) return -2;
	yych = *YYCURSOR;
	switch (yych) {
		case 0x00: goto yy45;
		case '\n':
			in->yyt1 = YYCURSOR;
			in->yyt2 = YYCURSOR;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'a':
			in->yyt1 = YYCURSOR;
			goto yy49;
		case 'b':
			in->yyt10 = YYCURSOR;
			goto yy50;
		case 'c':
			in->yyt11 = YYCURSOR;
			goto yy51;
		case 'd':
			in->yyt12 = YYCURSOR;
			goto yy52;
		case 'e':
			in->yyt13 = YYCURSOR;
			goto yy53;
		case 'f':
			in->yyt14 = YYCURSOR;
			goto yy54;
		case 'g':
			in->yyt15 = YYCURSOR;
			goto yy55;
		case 'h':
			in->yyt16 = YYCURSOR;
			goto yy56;
		default: goto yy46;
	}
yy45:
	++YYCURSOR;
	{ return count; }
yy46:
	++YYCURSOR;
yy47:
	{ return -1; }
yy48:
	++YYCURSOR;
	a1 = in->yyt1;
	a2 = in->yyt2;
	b1 = in->yyt10;
	b2 = in->yyt3;
	c1 = in->yyt11;
	c2 = in->yyt4;
	d1 = in->yyt12;
	d2 = in->yyt5;
	e1 = in->yyt13;
	e2 = in->yyt6;
	f1 = in->yyt14;
	f2 = in->yyt7;
	g1 = in->yyt15;
	g2 = in->yyt8;
	h1 = in->yyt16;
	h2 = in->yyt9;
	{
        if (a1)      { OUTC('A'); OUTS(a1, a2); }
        else if (b1) { OUTC('B'); OUTS(b1, b2); }
        else if (c1) { OUTC('C'); OUTS(c1, c2); }
        else if (d1) { OUTC('D'); OUTS(d1, d2); }
        else if (e1) { OUTC('E'); OUTS(e1, e2); }
        else if (f1) { OUTC('F'); OUTS(f1, f2); }
        else if (g1) { OUTC('G'); OUTS(g1, g2); }
        else if (h1) { OUTC('H'); OUTS(h1, h2); }
        OUTC('\n');
        goto loop;
    }
yy49:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			in->yyt2 = YYCURSOR;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'a': goto yy57;
		default: goto yy47;
	}
yy50:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = YYCURSOR;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'b': goto yy59;
		default: goto yy47;
	}
yy51:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = YYCURSOR;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'c': goto yy60;
		default: goto yy47;
	}
yy52:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = YYCURSOR;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'd': goto yy61;
		default: goto yy47;
	}
yy53:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = YYCURSOR;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'e': goto yy62;
		default: goto yy47;
	}
yy54:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = YYCURSOR;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'f': goto yy63;
		default: goto yy47;
	}
yy55:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = YYCURSOR;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'g': goto yy64;
		default: goto yy47;
	}
yy56:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = YYCURSOR;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			goto yy48;
		case 'h': goto yy65;
		default: goto yy47;
	}
yy57:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if (fill_buffered_scc(in, 1) != 0) return -2;
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt2 = YYCURSOR;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'a': goto yy57;
		default: goto yy58;
	}
yy58:
	YYCURSOR = YYMARKER;
	goto yy47;
yy59:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if (fill_buffered_scc(in, 1) != 0) return -2;
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = YYCURSOR;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'b': goto yy59;
		default: goto yy58;
	}
yy60:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if (fill_buffered_scc(in, 1) != 0) return -2;
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = YYCURSOR;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'c': goto yy60;
		default: goto yy58;
	}
yy61:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if (fill_buffered_scc(in, 1) != 0) return -2;
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = YYCURSOR;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'd': goto yy61;
		default: goto yy58;
	}
yy62:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if (fill_buffered_scc(in, 1) != 0) return -2;
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = YYCURSOR;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'e': goto yy62;
		default: goto yy58;
	}
yy63:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if (fill_buffered_scc(in, 1) != 0) return -2;
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = YYCURSOR;
			in->yyt8 = NULL;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt15 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'f': goto yy63;
		default: goto yy58;
	}
yy64:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if (fill_buffered_scc(in, 1) != 0) return -2;
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = YYCURSOR;
			in->yyt9 = NULL;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt16 = NULL;
			goto yy48;
		case 'g': goto yy64;
		default: goto yy58;
	}
yy65:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if (fill_buffered_scc(in, 1) != 0) return -2;
	yych = *YYCURSOR;
	switch (yych) {
		case '\n':
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			in->yyt6 = NULL;
			in->yyt7 = NULL;
			in->yyt8 = NULL;
			in->yyt9 = YYCURSOR;
			in->yyt10 = NULL;
			in->yyt11 = NULL;
			in->yyt12 = NULL;
			in->yyt13 = NULL;
			in->yyt14 = NULL;
			in->yyt15 = NULL;
			goto yy48;
		case 'h': goto yy65;
		default: goto yy58;
	}
}

}

#undef YYCURSOR
#undef YYMARKER
#undef YYLIMIT
#undef YYTOKEN
#undef TLP_CLEAR

#define FN_BENCH(suffix) \
void bench_##suffix::operator()( \
        benchmark::State &state, const char* input, long expected) const { \
    long count = 0; \
    for (auto _ : state) { \
        input_t in; \
        init_input_##suffix(&in, input); \
        count = lex_##suffix(&in); \
        free_input(&in); \
    } \
    if (count != expected) state.SkipWithError("re2c: error"); \
}
FN_BENCH(simple)
FN_BENCH(buffered_eof)
FN_BENCH(buffered_scc)
#undef FN_BENCH

#define FN_TEST(suffix) \
bool test_##suffix(const char* input, long expected) { \
    input_t in; \
    init_input_##suffix(&in, input); \
    long count = lex_##suffix(&in); \
    switch (count) { \
    default: \
        if (count != expected) { \
            fprintf(stderr, "re2c: wrong count, expected %ld, got %ld\n", expected, count); \
        } \
        break; \
    case -1: \
        fprintf(stderr, "re2c: syntax error\n"); \
        break; \
    case -2: \
        fprintf(stderr, "re2c: yyfill error\n"); \
        break; \
    } \
    free_input(&in); \
    return count == expected; \
}
FN_TEST(simple)
FN_TEST(buffered_eof)
FN_TEST(buffered_scc)
#undef FN_TEST


} // namespace re2c_submatch_12__alt1_8

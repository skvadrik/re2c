/* Generated by re2c 3.0 on Mon Jan  9 15:25:55 2023 */
// re2d $INPUT -o $OUTPUT -i --header lexer/state.d
import core.stdc.stddef;
import lexer.state;  // the module is generated by re2c



long lex(ref LexerState st) {
    const(char) *t;
    
{
	char yych;
	goto yy0;
yy1:
	st.cur++;
yy0:
	yych = *st.cur;
	if (yych <= '`') {
		st.yyt1 = st.cur;
		goto yy2;
	}
	if (yych <= 'a') goto yy1;
	if (yych <= 'b') {
		st.yyt1 = st.cur;
		goto yy3;
	}
	st.yyt1 = st.cur;
yy2:
	t = st.yyt1;
	{ return t - st.str; }
yy3:
	st.cur++;
	yych = *st.cur;
	if (yych == 'b') goto yy3;
	goto yy2;
}

}

unittest{
    const char *s = "ab";
    LexerState st = { s, s , null };
    assert(lex(st) == 1);
    const char *s2 = "aaabbbbbbbb";
    LexerState st2 = { s2, s2 , null };
    assert(lex(st2) == 3);
}

extern(C) void main()
{
    static foreach(u; __traits(getUnitTests, __traits(parent, main)))
        u();
}

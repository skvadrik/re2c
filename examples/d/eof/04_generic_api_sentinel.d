/* Generated by re2c 3.0 on Sun Jan  8 12:44:47 2023 */
#line 1 "04_generic_api_sentinel.re"
// re2d $INPUT -o $OUTPUT
module generic_api_sentinel04;
import core.stdc.stdlib;
import core.stdc.string;

static int lex(in string str, ulong len) {
    // For the sake of example create a string without terminating null.
    char *buf = cast(char*) malloc(len);
    memcpy(buf, cast(const(void*)) str, len);

    const(char) *cur = buf, lim = buf + len;
    int count = 0;

    for (;;) {
    
#line 19 "04_generic_api_sentinel.d"
{
	char yych;
	yych = cur < lim ? *cur : 0;
	if (yych <= ' ') {
		if (yych <= 0x0000) goto yy1;
		if (yych <= 0x001F) goto yy2;
		goto yy3;
	} else {
		if (yych <= '`') goto yy2;
		if (yych <= 'z') goto yy4;
		goto yy2;
	}
yy1:
	++cur;
#line 24 "04_generic_api_sentinel.re"
	{ break;{} }
#line 36 "04_generic_api_sentinel.d"
yy2:
	++cur;
#line 23 "04_generic_api_sentinel.re"
	{ count = -1; break; }
#line 41 "04_generic_api_sentinel.d"
yy3:
	++cur;
	yych = cur < lim ? *cur : 0;
	if (yych == ' ') goto yy3;
#line 26 "04_generic_api_sentinel.re"
	{ continue; }
#line 48 "04_generic_api_sentinel.d"
yy4:
	++cur;
	yych = cur < lim ? *cur : 0;
	if (yych <= '`') goto yy5;
	if (yych <= 'z') goto yy4;
yy5:
#line 25 "04_generic_api_sentinel.re"
	{ ++count; continue;{} }
#line 57 "04_generic_api_sentinel.d"
}
#line 27 "04_generic_api_sentinel.re"

    }

    free(buf);
    return count;
}

void TEST(immutable char[] s, int r){
    assert(lex(s,s.length)==r);
}

unittest{
    TEST("", 0);
    TEST("one two three ", 3);
    TEST("f0ur", -1);
}

extern(C) void main()
{
    static foreach(u; __traits(getUnitTests, __traits(parent, main)))
        u();
}

/* Generated by re2c 3.0 on Sun Jan  8 12:41:31 2023 */
#line 1 "03_eof_rule.re"
// re2c $INPUT -o $OUTPUT
module eof_rule03;

// Expect a null-terminated string.
int lex(in string str, ulong len) {
    const(char) *YYCURSOR = str.ptr, YYLIMIT = str.ptr + len, YYMARKER;
    int count = 0;

    for (;;) {
    
#line 14 "03_eof_rule.d"
{
	char yych;
	yych = *YYCURSOR;
	if (yych <= ' ') {
		if (yych <= 0x0000) {
			if (YYLIMIT <= YYCURSOR) goto yy9;
			goto yy1;
		}
		if (yych >= ' ') goto yy3;
	} else {
		if (yych == '\'') goto yy5;
	}
yy1:
	YYCURSOR++;
yy2:
#line 22 "03_eof_rule.re"
	{ return -1; }
#line 32 "03_eof_rule.d"
yy3:
	YYCURSOR++;
	yych = *YYCURSOR;
	if (yych <= 0x0000) goto yy4;
	if (yych == ' ') goto yy3;
yy4:
#line 25 "03_eof_rule.re"
	{ continue; }
#line 41 "03_eof_rule.d"
yy5:
	YYCURSOR++;
	YYMARKER = YYCURSOR;
	yych = *YYCURSOR;
	if (yych >= 0x0001) goto yy7;
	if (YYLIMIT <= YYCURSOR) goto yy2;
yy6:
	YYCURSOR++;
	yych = *YYCURSOR;
yy7:
	if (yych <= '\'') {
		if (yych <= 0x0000) {
			if (YYLIMIT <= YYCURSOR) goto yy10;
			goto yy6;
		}
		if (yych <= '&') goto yy6;
	} else {
		if (yych == '\\') goto yy8;
		goto yy6;
	}
	YYCURSOR++;
#line 24 "03_eof_rule.re"
	{ ++count; continue; }
#line 65 "03_eof_rule.d"
yy8:
	YYCURSOR++;
	yych = *YYCURSOR;
	if (yych <= 0x0000) {
		if (YYLIMIT <= YYCURSOR) goto yy10;
		goto yy6;
	}
	goto yy6;
yy9:
#line 23 "03_eof_rule.re"
	{ return count; }
#line 77 "03_eof_rule.d"
yy10:
	YYCURSOR = YYMARKER;
	goto yy2;
}
#line 26 "03_eof_rule.re"

    }
    assert(0);
}

void TEST(immutable char[] s, int r){
    assert(lex(s,s.length)==r);
}

unittest{
    TEST("", 0);
    TEST("'qu\0tes' 'are' 'fine: \\'' ", 3);
    TEST("'unterminated\\'", -1);
}

extern(C) void main()
{
    static foreach(u; __traits(getUnitTests, __traits(parent, main)))
        u();
}

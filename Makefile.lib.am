# this file is incomplete and should be included from the main Makefile.am

lib_LTLIBRARIES += libre2c.la

libre2c_la_CXXFLAGS = $(AM_CXXFLAGS)
libre2c_la_LDFLAGS = -module -no-undefined

libre2c_la_HDR = \
	lib/lex.h \
	lib/regcomp_dfa_multipass.h \
	lib/regex.h \
	lib/regex_impl.h \
	lib/regoff_trie.h \
	src/constants.h \
	src/codegen/code.h \
	src/options/opt.h \
	src/options/symtab.h \
	src/adfa/adfa.h \
	src/cfg/cfg.h \
	src/dfa/closure_leftmost.h \
	src/dfa/closure_posix.h \
	src/dfa/determinization.h \
	src/dfa/dfa.h \
	src/dfa/posix_precedence.h \
	src/dfa/tag_history.h \
	src/dfa/tagver_table.h \
	src/dfa/tcmd.h \
	src/nfa/nfa.h \
	src/encoding/case.h \
	src/encoding/ebcdic.h \
	src/encoding/enc.h \
	src/encoding/range_suffix.h \
	src/encoding/utf8.h \
	src/encoding/utf16.h \
	src/msg/location.h \
	src/msg/msg.h \
	src/msg/ver_to_vernum.h \
	src/msg/warn.h \
	src/regexp/re.h \
	src/regexp/rule.h \
	src/regexp/tag.h \
	src/compile.h \
	src/skeleton/path.h \
	src/skeleton/skeleton.h \
	src/parse/ast.h \
	src/parse/input.h \
	src/parse/parser.h \
	src/parse/scanner.h \
	src/debug/debug.h \
	src/util/allocator.h \
	src/util/attribute.h \
	src/util/check.h \
	src/util/containers.h \
	src/util/file_utils.h \
	src/util/forbid_copy.h \
	src/util/hash32.h \
	src/util/nowarn_in_bison.h \
	src/util/range.h \
	src/util/string_utils.h \
	src/util/u32lim.h

libre2c_la_SRC = \
	lib/regcomp.cc \
	lib/regexec.cc \
	lib/regexec_dfa.cc \
	lib/regexec_dfa_multipass.cc \
	lib/regexec_nfa_leftmost.cc \
	lib/regexec_nfa_leftmost_trie.cc \
	lib/regexec_nfa_posix.cc \
	lib/regexec_nfa_posix_trie.cc \
	lib/regexec_nfa_posix_backward.cc \
	lib/regexec_nfa_posix_kuklewicz.cc \
	lib/regfree.cc \
	lib/stubs.cc \
	src/parse/ast.cc \
	src/options/opt.cc \
	src/options/symtab.cc \
	src/cfg/cfg.cc \
	src/cfg/compact.cc \
	src/cfg/dce.cc \
	src/cfg/freeze.cc \
	src/cfg/interfere.cc \
	src/cfg/liveanal.cc \
	src/cfg/normalize.cc \
	src/cfg/optimize.cc \
	src/cfg/rename.cc \
	src/cfg/varalloc.cc \
	src/dfa/closure.cc \
	src/debug/dump_adfa.cc \
	src/debug/dump_cfg.cc \
	src/debug/dump_dfa.cc \
	src/debug/dump_dfa_tree.cc \
	src/debug/dump_interf.cc \
	src/debug/dump_nfa.cc \
	src/dfa/dead_rules.cc \
	src/dfa/determinization.cc \
	src/dfa/fallback_tags.cc \
	src/dfa/fillpoints.cc \
	src/dfa/find_state.cc \
	src/dfa/minimization.cc \
	src/dfa/tagver_table.cc \
	src/dfa/tcmd.cc \
	src/nfa/re_to_nfa.cc \
	src/encoding/enc.cc \
	src/encoding/range_suffix.cc \
	src/encoding/ebcdic.cc \
	src/encoding/utf16.cc \
	src/encoding/utf8.cc \
	src/msg/msg.cc \
	src/msg/warn.cc \
	src/regexp/ast_to_re.cc \
	src/regexp/default_tags.cc \
	src/regexp/fixed_tags.cc \
	src/regexp/nullable.cc \
	src/regexp/re.cc \
	src/regexp/split_charset.cc \
	src/skeleton/control_flow.cc \
	src/skeleton/maxpath.cc \
	src/skeleton/skeleton.cc \
	src/util/range.cc \
	src/util/string_utils.cc

libre2c_la_SOURCES = \
	$(libre2c_la_HDR) \
	$(libre2c_la_SRC)

libre2c_la_CUSTOM = \
	lib/lex.re \
	lib/parse.ypp \
	lib/test_helper.re \
	src/msg/ver_to_vernum.re

libre2c_la_GEN_SRC = \
	lib/lex.cc \
	lib/parse.cc \
	lib/test_helper.cc \
	src/msg/ver_to_vernum.cc
libre2c_la_GEN_HDR = \
	lib/parse.h
libre2c_la_GEN = \
	$(libre2c_la_GEN_SRC) \
	$(libre2c_la_GEN_HDR)

# custom rules create headers and must go before normal rules
BUILT_SOURCES += $(libre2c_la_GEN_SRC)

libre2c_la_BOOTSTRAP = \
	bootstrap/lib/parse.cc \
	bootstrap/lib/parse.h \
	bootstrap/lib/lex.cc \
	bootstrap/lib/test_helper.cc \
	bootstrap/src/msg/ver_to_vernum.cc

nodist_libre2c_la_SOURCES = $(libre2c_la_GEN)

EXTRA_DIST += \
	$(libre2c_la_BOOTSTRAP) \
	$(libre2c_la_CUSTOM)

CLEANFILES += $(libre2c_la_GEN)

# lexer depends on bison-generated header
lib/lex.cc: lib/parse.cc

# tests
test_libre2c_SOURCES = \
	lib/test.cc \
	lib/test_helper.h \
	lib/test_helper.cc
test_libre2c_LDADD = libre2c.la
check_PROGRAMS += test_libre2c

# benchmarks
if WITH_BENCHMARKS
SUBDIRS += benchmarks/submatch_nfa
SUBDIRS += benchmarks/submatch_dfa_jit
EXTRA_DIST += benchmarks/submatch_nfa
EXTRA_DIST += benchmarks/submatch_dfa_jit
if WITH_JAVA
SUBDIRS += benchmarks/submatch_java
EXTRA_DIST += benchmarks/submatch_java
endif # WITH_JAVA
endif # WITH_BENCHMARKS

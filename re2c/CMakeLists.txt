cmake_minimum_required(VERSION 3.3.1)
cmake_policy(VERSION 3.3.1)

project(re2c
	VERSION 0.16
)

# Set up CMake directories
set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/cmake)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Variables needed for generating config.h
set(PACKAGE ${PROJECT_NAME})
set(VERSION ${PROJECT_VERSION})
set(PACKAGE_NAME ${PACKAGE})
set(PACKAGE_BUGREPORT "re2c-general@lists.sourceforge.net")
set(PACKAGE_STRING "${PACKAGE} ${VERSION}")
set(PACKAGE_TARNAME "${PACKAGE}")
set(PACKAGE_URL "")
set(PACKAGE_VERSION "${VERSION}")

# Check for optional includes to define in config.h
include(CheckIncludeFiles)
check_include_files(stdint.h HAVE_STDINT_H)

# Check sizeof various types to define in config.h
include(CheckTypeSize)
check_type_size(0i8 SIZEOF_0i8)
check_type_size(0l SIZEOF_0L)
check_type_size(0ll SIZEOF_0LL)
check_type_size(char SIZEOF_CHAR)
check_type_size(int SIZEOF_INT)
check_type_size(long SIZEOF_LONG)
check_type_size("long long" SIZEOF_LONG_LONG)
check_type_size(short SIZEOF_SHORT)
check_type_size("void *" SIZEOF_VOID_P)
check_type_size(__int64 SIZEOF___INT64)

# re2c header files
set(re2c_HDRS
	src/adfa/action.h
	src/adfa/adfa.h
	src/adfa/dump.h
	src/ast/ast.h
	src/ast/input.h
	src/ast/parser.h
	src/ast/scanner.h
	src/ast/unescape.h
	src/code/bitmap.h
	src/code/emit.h
	src/code/go.h
	src/code/input_api.h
	src/code/label.h
	src/code/output.h
	src/code/print.h
	src/conf/msg.h
	src/conf/opt.h
	src/conf/warn.h
	src/dfa/closure.h
	src/dfa/dfa.h
	src/dfa/dump.h
	src/dfa/find_state.h
	src/dfa/tagpool.h
	src/dfa/tagtree.h
	src/dfa/tcmd.h
	src/dfa/cfg/cfg.h
	src/nfa/nfa.h
	src/re/empty_class_policy.h
	src/re/re.h
	src/re/rule.h
	src/re/tag.h
	src/re/encoding/case.h
	src/re/encoding/enc.h
	src/re/encoding/range_suffix.h
	src/re/encoding/utf8/utf8.h
	src/re/encoding/utf8/utf8_range.h
	src/re/encoding/utf8/utf8_regexp.h
	src/re/encoding/utf16/utf16.h
	src/re/encoding/utf16/utf16_range.h
	src/re/encoding/utf16/utf16_regexp.h
	src/skeleton/path.h
	src/skeleton/skeleton.h
	src/util/allocate.h
	src/util/attribute.h
	src/util/c99_stdint.h
	src/util/counter.h
	src/util/forbid_copy.h
	src/util/free_list.h
	src/util/hash32.h
	src/util/local_increment.h
	src/util/lookup.h
	src/util/range.h
	src/util/s_to_n32_unsafe.h
	src/util/slab_allocator.h
	src/util/smart_ptr.h
	src/util/static_assert.h
	src/util/string_utils.h
	src/util/u32lim.h
	src/util/uniq_vector.h
	src/util/wrap_iter.h
	src/compile.h
)

# re2c source files
set(re2c_SRCS
	src/adfa/adfa.cc
	src/adfa/dump.cc
	src/adfa/prepare.cc
	src/ast/ast.cc
	src/ast/input.cc
	src/ast/normalize.cc
	src/ast/scanner.cc
	src/ast/unescape.cc
	src/ast/validate.cc
	src/code/bitmap.cc
	src/code/emit_action.cc
	src/code/emit_dfa.cc
	src/code/go_construct.cc
	src/code/go_destruct.cc
	src/code/go_emit.cc
	src/code/go_used_labels.cc
	src/code/input_api.cc
	src/code/label.cc
	src/code/output.cc
	src/code/print.cc
	src/conf/msg.cc
	src/conf/opt.cc
	src/conf/warn.cc
	src/dfa/closure.cc
	src/dfa/dead_rules.cc
	src/dfa/determinization.cc
	src/dfa/dump.cc
	src/dfa/fallback_tags.cc
	src/dfa/fillpoints.cc
	src/dfa/find_state.cc
	src/dfa/minimization.cc
	src/dfa/tagpool.cc
	src/dfa/tagtree.cc
	src/dfa/tcmd.cc
	src/dfa/cfg/cfg.cc
	src/dfa/cfg/compact.cc
	src/dfa/cfg/dce.cc
	src/dfa/cfg/dump.cc
	src/dfa/cfg/interfere.cc
	src/dfa/cfg/liveanal.cc
	src/dfa/cfg/normalize.cc
	src/dfa/cfg/optimize.cc
	src/dfa/cfg/rename.cc
	src/dfa/cfg/varalloc.cc
	src/nfa/dump.cc
	src/nfa/estimate_size.cc
	src/nfa/re_to_nfa.cc
	src/re/ast_to_re.cc
	src/re/default_tags.cc
	src/re/fixed_tags.cc
	src/re/nullable.cc
	src/re/rule.cc
	src/re/split_charset.cc
	src/re/tag.cc
	src/re/encoding/enc.cc
	src/re/encoding/range_suffix.cc
	src/re/encoding/utf8/utf8.cc
	src/re/encoding/utf8/utf8_range.cc
	src/re/encoding/utf8/utf8_regexp.cc
	src/re/encoding/utf16/utf16.cc
	src/re/encoding/utf16/utf16_range.cc
	src/re/encoding/utf16/utf16_regexp.cc
	src/skeleton/control_flow.cc
	src/skeleton/generate_code.cc
	src/skeleton/generate_data.cc
	src/skeleton/maxpath.cc
	src/skeleton/skeleton.cc
	src/util/range.cc
	src/util/s_to_n32_unsafe.cc
	src/compile.cc
	src/main.cc
)

# Sources generated by bison
set(bison_SRCS
	bootstrap/src/ast/parser.cc
	bootstrap/src/ast/y.tab.h
)

# Source files used for bootstrapping
set(bootstrap_SRCS
	${bison_SRCS}
	bootstrap/src/ast/lex.cc
	bootstrap/src/ast/lex_conf.cc
	bootstrap/src/conf/parse_opts.cc
)

# Input files to re2c for regenerating bootstrapped files
set(custom_SRCS
	src/ast/lex.re
	src/ast/lex_conf.re
	src/conf/parse_opts.re
)

#bison input: src/ast/parser.ypp

# Generate config.h file
configure_file(config.h.cmake.in ${CMAKE_SOURCE_DIR}/config.h)

include_directories(${CMAKE_SOURCE_DIR} ${CMAKE_BINARY_DIR})

add_executable(re2c_bootstrap ${re2c_SRCS} ${re2c_HDRS} ${bootstrap_SRCS} ${bootstrap_HDRS})
target_compile_definitions(re2c_bootstrap PRIVATE $<$<CXX_COMPILER_ID:MSVC>:_ITERATOR_DEBUG_LEVEL=0>)


# Use the bootstrapped re2c to regenerate .re files and create a new version
add_custom_command(OUTPUT ${CMAKE_BINARY_DIR}/src/ast/lex.cc
	COMMAND re2c_bootstrap -b ${CMAKE_SOURCE_DIR}/src/ast/lex.re -o ${CMAKE_BINARY_DIR}/src/ast/lex.cc
	DEPENDS re2c_bootstrap
)

add_custom_command(OUTPUT ${CMAKE_BINARY_DIR}/src/ast/lex_conf.cc
	COMMAND re2c_bootstrap -b ${CMAKE_SOURCE_DIR}/src/ast/lex_conf.re -o ${CMAKE_BINARY_DIR}/src/ast/lex_conf.cc
	DEPENDS re2c_bootstrap
)

add_custom_command(OUTPUT ${CMAKE_BINARY_DIR}/src/conf/parse_opts.cc
	COMMAND re2c_bootstrap -b ${CMAKE_SOURCE_DIR}/src/conf/parse_opts.re -o ${CMAKE_BINARY_DIR}/src/conf/parse_opts.cc
	DEPENDS re2c_bootstrap
)

# TODO: if bison or yacc is available, regenerate these from src/parse/parser.ypp file instead
configure_file(bootstrap/src/ast/parser.cc ${CMAKE_BINARY_DIR}/src/ast/parser.cc COPYONLY)
configure_file(bootstrap/src/ast/y.tab.h ${CMAKE_BINARY_DIR}/src/ast/y.tab.h COPYONLY)

set(autogen_SRCS
	${CMAKE_BINARY_DIR}/src/ast/lex.cc
	${CMAKE_BINARY_DIR}/src/ast/lex_conf.cc
	${CMAKE_BINARY_DIR}/src/conf/parse_opts.cc
	${CMAKE_BINARY_DIR}/src/ast/parser.cc
	${CMAKE_BINARY_DIR}/src/ast/y.tab.h
)

add_executable(re2c ${re2c_SRCS} ${re2c_HDRS} ${autogen_SRCS})
target_compile_definitions(re2c PRIVATE $<$<CXX_COMPILER_ID:MSVC>:_ITERATOR_DEBUG_LEVEL=0>)

# TODO: generate doc/readme if appropriate tool is available, install (to share/man folder); different install structure for Windows

install(TARGETS re2c
	RUNTIME DESTINATION bin
)

# TODO: build tests and run test target